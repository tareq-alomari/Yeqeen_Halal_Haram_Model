# Yaqeen (يقين): A Halal Food Classifier

[![Hugging Face Spaces](https://img.shields.io/badge/%F0%9F%A4%97%20Hugging%20Face-Try%20the%20Demo-blue)](https://huggingface.co/spaces/alomari7/Yeqeen_Halal_Haram_Model)
![Accuracy](https://img.shields.io/badge/Accuracy-96.69%25-brightgreen)
![License](https://img.shields.io/badge/License-MIT-yellow)
![Python](https://img.shields.io/badge/Python-3.8%2B-blue)

نظام ذكاء اصطناعي متكامل يستخدم معالجة اللغات الطبيعية وتعلم الآلة لتصنيف المنتجات الغذائية تلقائيًا إلى "حلال"، "حرام"، أو "مشتبه فيه" بناءً على قائمة مكوناتها.

---

![لقطة شاشة للتطبيق](https://i.imgur.com/k6O6s7C.png)
*الواجهة التفاعلية للتطبيق تعمل على تصنيف منتج يحتوي على مكون "Prosciutto"*

## 🎯 المشروع

في ظل تعقيد المنتجات الغذائية الحديثة، يهدف هذا المشروع إلى توفير أداة بسيطة وفعالة لمساعدة المستهلكين المسلمين على اتخاذ قرارات غذائية مستنيرة. يقوم النظام بتحليل النصوص التي تصف المنتج ومكوناته، ويقدم حكمًا شرعيًا متوقعًا مع السبب المحتمل وراء هذا الحكم.

## ✨ الميزات

- **تصنيف ثلاثي:** يصنف المنتجات بدقة إلى `حلال`, `حرام`, و `مشتبه فيه`.
- **تفسير النتائج:** يقدم سببًا واضحًا للتصنيفات غير الحلال، بالاعتماد على قاعدة معرفة شرعية.
- **دقة عالية:** تم تدريب النموذج على مجموعة بيانات ضخمة وحقق دقة إجمالية تبلغ **96.69%**.
- **منهجية هجينة:** يجمع بين قوة النظام الخبير القائم على القواعد ومرونة التعلم الآلي للوصول إلى أفضل النتائج.
- **واجهة تفاعلية:** تم نشره كواجهة ويب سهلة الاستخدام ومتاحة للجميع على منصة Hugging Face.

## ⚙️ المنهجية

يعتمد النظام على نهج هجين فريد من ثلاث خطوات رئيسية:

1.  **النظام الخبير:** تم بناء قاعدة معرفة شاملة (قاموس بايثون) تحتوي على مئات المكونات المحرمة والمشبوهة. تم استخدام هذا "العقل المفكر" لتصنيف مجموعة بيانات ضخمة بشكل آلي ودقيق، مما وفر لنا بيانات تدريب موثوقة.

2.  **تعلم الآلة:** تم استخدام البيانات المصنفة لتدريب نموذج الانحدار اللوجستي (`Logistic Regression`). تم تحويل النصوص إلى متجهات رقمية باستخدام `TfidfVectorizer` لتمكين النموذج من "فهم" العلاقة بين الكلمات والحكم الشرعي.

3.  **التطبيق النهائي:** الواجهة التفاعلية تستخدم هذا النظام الهجين. أولاً، يقوم نموذج تعلم الآلة بإعطاء التنبؤ الأولي. ثانيًا، تقوم قاعدة المعرفة بالبحث في النص لتقديم تفسير واضح ومنطقي للمستخدم.

## 🛠️ التقنيات المستخدمة

- **اللغة:** Python 3.8+
- **تحليل البيانات:** Pandas, NumPy
- **تعلم الآلة:** Scikit-learn
- **الواجهة التفاعلية:** Gradio
- **مكتبات مساعدة:** Joblib, re, Matplotlib, Seaborn

## 📂 هيكل المشروع

Yeqeen_Halal_Haram_Model/
│
├── app.py                      # الكود الخاص بتشغيل واجهة Gradio
├── halal_classifier_model.pkl    # ملف النموذج النهائي المحفوظ
├── requirements.txt            # المكتبات المطلوبة للتشغيل
├── .gitignore                  # ملف لتجاهل الملفات غير المرغوبة
└── README.md                   # هذا الملف التعريفي


## 🚀 التشغيل والاستخدام

لتشغيل المشروع على جهازك المحلي، اتبع الخطوات التالية:

### 1. استنساخ المستودع
```bash
git clone [https://github.com/tareq-alomari/Yeqeen_Halal_Haram_Model.git](https://github.com/tareq-alomari/Yeqeen_Halal_Haram_Model.git)
cd Yeqeen_Halal_Haram_Model
2. إعداد البيئة
Bash

# (مستحسن) أنشئ بيئة افتراضية
python -m venv venv
source venv/bin/activate  # On Windows: venv\Scripts\activate

# ثبّت المكتبات المطلوبة
pip install -r requirements.txt
3. تشغيل التطبيق
Bash

python app.py
افتح المتصفح على العنوان المحلي الذي سيظهر في الطرفية (عادة http://127.0.0.1:7860).

👥 فريق العمل
فريق التطوير
طارق العمري
علي القواس
عبدالرحمن سنان
الإشراف الأكاديمي
م. مالك المصنف
شكر وتقدير خاص
نتقدم بجزيل الشكر والتقدير إلى الدكتور عادل العفيري، الدكتور الأكاديمي لمادة تنقيب البيانات، على توجيهاته القيمة ودعمه المستمر الذي كان له الأثر الكبير في إنجاز هذا العمل.

🔮 العمل المستقبلي
[ ] تحسين قاعدة المعرفة: إضافة المزيد من المكونات والمترادفات بلغات متعددة.
[ ] نماذج متقدمة: تجربة نماذج التعلم العميق (مثل BERT) لتحسين فهم السياق.
[ ] آلية التغذية الراجعة: تفعيل زر "Flag" في الواجهة لجمع التصحيحات من المستخدمين واستخدامها لتحسين النموذج بشكل دوري.
[ ] معالجة عدم التوازن: تجربة تقنيات متقدمة مثل SMOTE لمعالجة الفئات النادرة.
